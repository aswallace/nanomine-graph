version: 2
jobs:
  build:
    working_directory: /apps/nanomine-graph
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - checkout
      - run:
          name: Run tests
          command: .circleci/test.sh tetherlessworld/whyis:latest
      - store_artifacts:
          path: test-results/py/htmlcov
      - store_test_results:
          path: test-results
      - run:
          name: Build split Docker image
          command: |
            cd docker/compose/split/app && WHYIS_IMAGE_TAG=latest docker-compose build whyis-server
      - run:
          name: Build and push Docker images
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS

              # Monolithic latest, push (build above)
              WHYIS_IMAGE_TAG=latest docker-compose -f docker/compose/monolithic/docker-compose.yml push whyis
              # Monolithic master, build and push
              WHYIS_IMAGE_TAG=master docker-compose -f docker/compose/monolithic/docker-compose.yml build whyis && WHYIS_IMAGE_TAG=master docker-compose -f docker/compose/monolithic/docker-compose.yml push whyis

              # Split latest, push (build above)
              WHYIS_IMAGE_TAG=latest docker-compose -f docker/compose/split/app/docker-compose.yml push whyis-server
            fi
  lint-js:
    working_directory: /whyis
    docker:
      - image: node:12.6-stretch
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: cd static && npm install
      - run:
          name: Lint the code
          command: .circleci/lint-js.sh
      - store_artifacts:
          path: lint-results
  lint-py:
    working_directory: /whyis
    docker:
      - image: python:3.7-stretch
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip3 install flake8 pycodestyle pylint vulture
      - run:
          name: Lint the code
          command: .circleci/lint-py.sh
      - store_artifacts:
          path: lint-results

workflows:
  version: 2
  build_lint:
    jobs:
      - build
      - lint-js
      - lint-py
